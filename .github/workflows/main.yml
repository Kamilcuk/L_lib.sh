---
on:
  - push
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    strategy:
      fail-fast: false
      matrix:
        version:
          - latest
          - 5.2
          - 5.1
          - 5.0
          - 4.4
          - 4.3
          - 4.2
          - 4.1
          - 4.0
          - 3.2
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          build-args: VERSION=${{ matrix.version }}
          target: test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          pull: ${{matrix.version == 'latest'}}

  shellcheck:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          target: shellcheck
          cache-from: type=gha
          cache-to: type=gha,mode=max
          pull: true

  build_pages:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: kamilcuk/shdoc
          path: shdoc
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          context: .
          target: doc1
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # build-push-action doesn't work, I'll just use make
          # outputs: type=local,dest=./public
      - run: make doc
      - uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy_docker:
    needs: [test, shellcheck, build_pages]
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          pull: true
          push: true
          target: app
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  deploy_pages:
    needs: [test, shellcheck, build_pages]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    timeout-minutes: 1
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
